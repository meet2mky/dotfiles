// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
// Extension: https://marketplace.visualstudio.com/items?itemName=actboy168.tasks
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run All Emulator Packages",
            "type": "shell",
            "command": "sed -i 's/containerd.io # docker-buildx-plugin docker-compose-plugin/containerd.io docker-buildx-plugin docker-compose-plugin/' tools/integration_tests/emulator_tests/emulator_tests.sh",
            "dependsOn": ["All Emulator Tests"],
            "options": {
                "statusbar": {
                    "hide": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            },
        },
        {
            "label": "Run Proxy Server",
            "type": "shell",
            "command": "go run  ./tools/integration_tests/emulator_tests/proxy_server/. --config-path=tools/integration_tests/emulator_tests/proxy_server/configs/${input:proxy_sever_config_file}",
            "dependsOn" : ["Start storage testbench server"],
            "options": {
                "statusbar": {
                    "hide": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "play"
                    }
                }
            }
        },
        {
            "label": "Build and Debug Fuse Emulator Tests",
            "type": "shell",
            "command": "dlv exec ./gcsfuse --headless --listen=:2345 --api-version=2 -- --log-severity=trace --custom-endpoint='http://localhost:8020/storage/v1/b?project=test-project' --foreground streaming-writes-it $HOME/mountedDir",
            "dependsOn" : ["Build Debug Binary"],
            "options": {
                "statusbar": {
                    "hide": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "debug-alt"
                    }
                }
            }
        },
        {
            "label": "Build in DBG & Mount",
            "type": "shell",
            "command": "dlv --check-go-version=false exec ./gcsfuse --headless --listen=:2345 --api-version=2 -- --log-severity=trace  --foreground ashmeen-zb $HOME/mountedDir",
            "dependsOn" : ["Build Debug Binary"],
            "options": {
                "statusbar": {
                    "hide": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "debug-alt"
                    }
                }
            }
        },
        {
            "label": "[EMULATOR] Run a test",
            "type": "shell",
            "command": "go test ./tools/integration_tests/emulator_tests/streaming_writes_failure/... -p 1 -short --integrationTest -v --testbucket=test-bucket --mountedDirectory=/home/mohitkyadav_google_com/mountedDirr --testOnCustomEndpoint=http://localhost:8020 -timeout 10m  -run '${input:TestSuite}/${input:TestName}|${input:TestName}'",
            "options": {
                "statusbar": {
                    "hide": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            }
        },
        {
            "label": "PACKAGE",
            "type": "shell",
            "command": "GODEBUG=asyncpreemptoff=1 CGO_ENABLED=0  go test ./tools/integration_tests/${input:TestPackage}/... -count=1 -v --integrationTest --testInstalledPackage=false --testbucket=mohitkyadav-hns --timeout 60m",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            },
        },
        {
            "label": "SINGLE",
            "type": "shell",
            "command": "GODEBUG=asyncpreemptoff=1 CGO_ENABLED=0  go test ./tools/integration_tests/${input:TestPackage}/... -count=1 -v --integrationTest --zonal=false --testInstalledPackage=false --testbucket=mohitkyadav-hns --timeout 60m ${input:TestNameRegex}",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            },
        },
        {
            "label": "ZB PACKAGE",
            "type": "shell",
            "command": "GODEBUG=asyncpreemptoff=1 CGO_ENABLED=0  go test ./tools/integration_tests/${input:TestPackage}/... -count=1 -v --integrationTest --zonal=true --testInstalledPackage=false --testbucket=mohitkyadav-zb-us-central1-a --timeout 60m",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            },
        },
        {
            "label": "ZB SINGLE",
            "type": "shell",
            "command": "GODEBUG=asyncpreemptoff=1 CGO_ENABLED=0  go test ./tools/integration_tests/${input:TestPackage}/... -count=1 -v --integrationTest --zonal=true --testInstalledPackage=false --testbucket=mohitkyadav-zb-us-central1-a --timeout 60m ${input:TestNameRegex}",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "run-all"
                    }
                }
            },
        },
        {
            "label": "Build and Install GCSFuse",
            "type": "shell",
            "command": "go build && go install .",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "cloud-download"
                    }
                }
            }
        },
        {
            "label": "Create Mounted Dir",
            "type": "shell",
            "command": "rm -rf $HOME/mountedDir && mkdir $HOME/mountedDir",
            "options": {
                "statusbar": {
                    "hide": true
                }
            }
        },
        {
            "label": "Build Debug Binary",
            "type": "shell",
            "command": "go build -gcflags='all=-N -l'",
            "dependsOn" : ["Create Mounted Dir"],
            "options": {
                "statusbar": {
                    "hide": true
                }
            }
        },
        {
            "label": "Abort All Fuse Mounts",
            "type": "shell",
            "command": "for t in /sys/fs/fuse/connections/*/abort; do echo 1 > $t; done",
            "options": {
                "statusbar": {
                    "hide": false,
                    "color": "#13e808",
                    "icon": {
                        "id": "close-all"
                    }
                }
            }
        },
        {
            "label": "Clean tmp from tests..",
            "type": "shell",
            "command": "sudo rm -rf /tmp/gcsfuse_readwrite_test* ; sudo rm -rf /tmp/go-build* ; sudo rm -rf /tmp/build_gcsfuse* ; sudo rm -rf /tmp/fs_test*",
            "options": {
                "statusbar": {
                    "enabled": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "close-all"
                    }
                }
            }
        },
        {
            "label": "Clean Bucket",
            "type": "shell",
            "command": "bash /usr/local/google/home/mohitkyadav/clean_bucket.sh ${input:TestBucket}",
            "options": {
                "statusbar": {
                    "enabled": true,
                    "color": "#13e808",
                    "icon": {
                        "id": "close-all"
                    }
                }
            }
        }
    ],
    "inputs": [
        {
            "id": "TestSuite",
            "type": "promptString",
            "description": "Test Suite name"
        },
        {
            "id": "IsZonal",
            "type": "pickString",
            "description": "Is Test run on Zonal Bucket",
            "options": [
                "true",
                "false",
            ],
            "default": "false"
        },
        {
            "id": "TestBucket",
            "type": "pickString",
            "description": "Test Bucket",
            "options": [
                "mohitkyadav-zb-us-central1-a",
                "meet2mky-hns",
                "meet2mky-hns-2",
                "meet2mky-hns-bucket",
                "meet2mky-non-hns-bucket",
                "zb-test-bucket2",
                "ashmeen-zb",
            ],
            "default": "meet2mky-hns-2"
        },
        {
            "id": "TestPackage",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "echo ${file} | tr '/' '\n' | grep -A 1 '^integration_tests$' | tail -n 1 | cat",
                "description": "Returns the package of to which current ${file} is part of.",
                "useFirstResult": true,
            },
        },
        {
            "id": "TestPackage",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "echo ${file} | tr '/' '\n' | grep -A 1 '^integration_tests$' | tail -n 1 | cat",
                "description": "Returns the package of to which current ${file} is part of.",
                "useFirstResult": true,
            },
        },
        {
            "id": "TestNameRegex",
            "type": "command",
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ${workspaceFolder}/.vscode/taskTestNameHelper.sh ${file} ${lineNumber}",
                "description": "Returns the regex to run test at cursor",
                "useFirstResult": true,
            },
        },
        {
            "id": "testbenchscript",
            "type": "promptString",
            "description": "Script to start storage test bench server",
            "default": "/usr/local/google/home/mohitkyadav/gcsfuse/tools/integration_tests/emulator_tests/emulator_tests.sh"
        },
        {
            "id": "proxy_sever_config_file",
            "type": "promptString",
            "description": "Proxy server config file",
            "default": "config.yaml"
        },
        {
            "id": "Count",
            "type": "promptString",
            "description": "Count for number of times test to run",
            "default": "1"
        }
    ]
}